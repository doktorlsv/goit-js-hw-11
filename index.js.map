{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"50678696-ed6f097088bf5690dd98584b9\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n  };\n\n  return axios\n    .get(BASE_URL, { params })\n    .then((response) => response.data)\n    .catch((error) => {\n      console.error(\"Error fetching images:\", error);\n      throw new Error(\"Failed to fetch images from Pixabay.\");\n    });\n}\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst myGallery = document.querySelector(\".gallery\");\n\n\nconst myLightbox = new SimpleLightbox(\".gallery-link\", {\n  captionsData: \"alt\",\n  captionDelay: 250,\n  captionPosition: \"bottom\",\n});\n\nexport function createGallery(images) {\n  function galleryItemInsertion({\n    webformatURL,\n    largeImageURL,\n    tags,\n    likes,\n    views,\n    comments,\n    downloads,\n  }) {\n    return `<li class=\"gallery-item\">\n        <div class=\"gallery-item-container\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n          </a>\n          <div class=\"image-info\">\n            <div class=\"image-info-container\"><b>Likes</b><p>${likes}</p></div>\n            <div class=\"image-info-container\"><b>Views</b><p>${views}</p></div>\n            <div class=\"image-info-container\"><b>Comments</b><p>${comments}</p></div>\n            <div class=\"image-info-container\"><b>Downloads</b><p>${downloads}</p></div>\n          </div>\n        </div>\n      </li>`;\n  }\n\n  const newGallerySyntax = images.map(galleryItemInsertion).join(\"\");\n  myGallery.insertAdjacentHTML(\"beforeend\", newGallerySyntax);\n\n\n  myLightbox.refresh();\n}\n\nexport function clearGallery() {\n  myGallery.innerHTML = \"\";\n}\n\nexport function showLoader() {\n  const myLoader = document.querySelector(\".loader\");\n  myLoader.classList.remove(\"visuallyhidden\");\n}\n\nexport function hideLoader() {\n  const myLoader = document.querySelector(\".loader\");\n  myLoader.classList.add(\"visuallyhidden\");\n}\n\n","import { getImagesByQuery } from \"./js/pixabay-api.js\";\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from \"./js/render-functions.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst myForm = document.querySelector(\".form\");\n\nconst searchImage = document.querySelector('input[name=\"search-text\"]');\n\nmyForm.addEventListener(\"submit\", onSubmit);\nasync function onSubmit(event) {\n  event.preventDefault();\n  const myQuery = searchImage.value.trim();\n  if (myQuery === \"\") {\n    myForm.reset();\n    iziToast.error({\n      title: \"Error\",\n      message: \"Search field cannot be empty!\",\n      position: \"topRight\",\n    });\n    return;\n  }\n  clearGallery();\n  showLoader();\n\n  try {\n    const myData = await getImagesByQuery(myQuery);\n\n    if (myData.hits.length === 0) {\n      iziToast.info({\n        message:\n          \"‚ùå Sorry, there are no images matching your search query. Please try again!\",\n        position: \"topRight\",\n        icon: false,\n        close: false,\n        backgroundColor: \"#ef4040\",\n        maxWidth: \"432px\",\n        minHeight: \"88px\",\n        html: true,\n      });\n    } else {\n      createGallery(myData.hits);\n    }\n  } catch (error) {\n    iziToast.error({\n      title: \"Error\",\n      message:\n        error.message ||\n        \"An error occurred while fetching images. Please try again later.\",\n      position: \"topRight\",\n    });\n  } finally {\n    hideLoader();\n    myForm.reset();\n  }\n}\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","response","error","myGallery","myLightbox","SimpleLightbox","createGallery","images","galleryItemInsertion","webformatURL","largeImageURL","tags","likes","views","comments","downloads","newGallerySyntax","clearGallery","showLoader","hideLoader","myForm","searchImage","onSubmit","event","myQuery","iziToast","myData"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEE,OAAOE,EACJ,IAAIJ,EAAU,CAAE,OAAAG,CAAM,CAAE,EACxB,KAAME,GAAaA,EAAS,IAAI,EAChC,MAAOC,GAAU,CAChB,cAAQ,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,sCAAsC,CAC5D,CAAK,CACL,CClBA,MAAMC,EAAY,SAAS,cAAc,UAAU,EAG7CC,EAAa,IAAIC,EAAe,gBAAiB,CACrD,aAAc,MACd,aAAc,IACd,gBAAiB,QACnB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CACpC,SAASC,EAAqB,CAC5B,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACJ,EAAK,CACD,MAAO;AAAA;AAAA,0CAE+BL,CAAa;AAAA,8CACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,+DAGTC,CAAK;AAAA,+DACLC,CAAK;AAAA,kEACFC,CAAQ;AAAA,mEACPC,CAAS;AAAA;AAAA;AAAA,YAI5E,CAEE,MAAMC,EAAmBT,EAAO,IAAIC,CAAoB,EAAE,KAAK,EAAE,EACjEL,EAAU,mBAAmB,YAAaa,CAAgB,EAG1DZ,EAAW,QAAO,CACpB,CAEO,SAASa,GAAe,CAC7Bd,EAAU,UAAY,EACxB,CAEO,SAASe,GAAa,CACV,SAAS,cAAc,SAAS,EACxC,UAAU,OAAO,gBAAgB,CAC5C,CAEO,SAASC,GAAa,CACV,SAAS,cAAc,SAAS,EACxC,UAAU,IAAI,gBAAgB,CACzC,CC9CA,MAAMC,EAAS,SAAS,cAAc,OAAO,EAEvCC,EAAc,SAAS,cAAc,2BAA2B,EAEtED,EAAO,iBAAiB,SAAUE,CAAQ,EAC1C,eAAeA,EAASC,EAAO,CAC7BA,EAAM,eAAc,EACpB,MAAMC,EAAUH,EAAY,MAAM,KAAI,EACtC,GAAIG,IAAY,GAAI,CAClBJ,EAAO,MAAK,EACZK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gCACT,SAAU,UAChB,CAAK,EACD,MACJ,CACER,EAAY,EACZC,EAAU,EAEV,GAAI,CACF,MAAMQ,EAAS,MAAM7B,EAAiB2B,CAAO,EAEzCE,EAAO,KAAK,SAAW,EACzBD,EAAS,KAAK,CACZ,QACE,6EACF,SAAU,WACV,KAAM,GACN,MAAO,GACP,gBAAiB,UACjB,SAAU,QACV,UAAW,OACX,KAAM,EACd,CAAO,EAEDnB,EAAcoB,EAAO,IAAI,CAE/B,OAAWxB,EAAO,CACduB,EAAS,MAAM,CACb,MAAO,QACP,QACEvB,EAAM,SACN,mEACF,SAAU,UAChB,CAAK,CACL,QAAG,CACCiB,EAAU,EACVC,EAAO,MAAK,CAChB,CACA"}